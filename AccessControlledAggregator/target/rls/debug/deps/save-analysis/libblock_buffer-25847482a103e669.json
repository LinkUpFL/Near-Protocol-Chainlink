{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3","program":"/Users/nolanjacobson/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","block_buffer","/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=25847482a103e669","-C","extra-filename=-25847482a103e669","--out-dir","/Users/nolanjacobson/Near-Protocol-Chainlink/AccessControlledAggregator/target/rls/debug/deps","-L","dependency=/Users/nolanjacobson/Near-Protocol-Chainlink/AccessControlledAggregator/target/rls/debug/deps","--extern","block_padding=/Users/nolanjacobson/Near-Protocol-Chainlink/AccessControlledAggregator/target/rls/debug/deps/libblock_padding-df38da6caa9d5055.rmeta","--extern","byte_tools=/Users/nolanjacobson/Near-Protocol-Chainlink/AccessControlledAggregator/target/rls/debug/deps/libbyte_tools-02a18774f5affcd1.rmeta","--extern","byteorder=/Users/nolanjacobson/Near-Protocol-Chainlink/AccessControlledAggregator/target/rls/debug/deps/libbyteorder-bf8367a50306bb11.rmeta","--extern","generic_array=/Users/nolanjacobson/Near-Protocol-Chainlink/AccessControlledAggregator/target/rls/debug/deps/libgeneric_array-594c3b95f3620ffa.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/nolanjacobson/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/nolanjacobson/Near-Protocol-Chainlink/AccessControlledAggregator/target/rls/debug/deps/libblock_buffer-25847482a103e669.rmeta"},"prelude":{"crate_id":{"name":"block_buffer","disambiguator":[8155896397149320927,6721004820163598727]},"crate_root":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src","external_crates":[{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9392975149979234998,17049149762166397483]}},{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16512841426258775062,11665789721448774207]}},{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10630307797325716480,16523273723520132349]}},{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":4,"id":{"name":"byteorder","disambiguator":[827964879953675758,17893369340547342645]}},{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[3710194649008989715,14559669089861450418]}},{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":6,"id":{"name":"alloc","disambiguator":[3264716338318844693,12681592148182797578]}},{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[140397795414171834,1910274434865169512]}},{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[5557669672741662647,10322216614238315513]}},{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[14339503364484872598,13531520383629478599]}},{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":10,"id":{"name":"hashbrown","disambiguator":[14161909693946419124,17554770295131960960]}},{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9716880057120631437,4575334529379688610]}},{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[17190292700912465587,13293574150729131089]}},{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16973425767318922457,5762286362994384933]}},{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[3049460603833016674,5895625007283919048]}},{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8971705811930800565,4802059752817986136]}},{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[7414259369911982492,16117941559470048194]}},{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":17,"id":{"name":"block_padding","disambiguator":[6248049038958457997,7885248837606696002]}},{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":18,"id":{"name":"byte_tools","disambiguator":[12810338674667558936,5148874854583768057]}},{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":19,"id":{"name":"generic_array","disambiguator":[9086342095647308992,11924305029751797303]}},{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":20,"id":{"name":"typenum","disambiguator":[11756469671418518477,3839368700891523621]}}],"span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":0,"byte_end":6763,"line_start":1,"line_end":210,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":0,"byte_end":6763,"line_start":1,"line_end":210,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":58},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":40},{"krate":0,"index":47},{"krate":0,"index":44},{"krate":0,"index":19},{"krate":0,"index":21}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":40},"span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":366,"byte_end":377,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"BlockBuffer","qualname":"::BlockBuffer","value":"BlockBuffer {  }","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43}],"decl_id":null,"docs":" Buffer for block processing of data\n","sig":null,"attributes":[{"value":"/ Buffer for block processing of data","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":289,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":835,"byte_end":840,"line_start":31,"line_end":31,"column_start":12,"column_end":17},"name":"input","qualname":"<BlockBuffer<BlockSize>>::input","value":"pub fn input<F>(&mut Self, &[u8], F) where\nF: FnMut(&GenericArray<u8, BlockSize>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Process data in `input` in blocks of size `BlockSize` using function `f`.\n","sig":null,"attributes":[{"value":"/ Process data in `input` in blocks of size `BlockSize` using function `f`.","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":732,"byte_end":809,"line_start":29,"line_end":29,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":814,"byte_end":823,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":3472,"byte_end":3482,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"input_lazy","qualname":"<BlockBuffer<BlockSize>>::input_lazy","value":"pub fn input_lazy<F>(&mut Self, &[u8], F) where\nF: FnMut(&GenericArray<u8, BlockSize>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Variant that doesn't flush the buffer until there's additional\n data to be processed. Suitable for tweakable block ciphers\n like Threefish that need to know whether a block is the *last*\n data block before processing it.\n","sig":null,"attributes":[{"value":"/ Variant that doesn't flush the buffer until there's additional","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":3201,"byte_end":3267,"line_start":95,"line_end":95,"column_start":5,"column_end":71}},{"value":"/ data to be processed. Suitable for tweakable block ciphers","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":3272,"byte_end":3334,"line_start":96,"line_end":96,"column_start":5,"column_end":67}},{"value":"/ like Threefish that need to know whether a block is the *last*","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":3339,"byte_end":3405,"line_start":97,"line_end":97,"column_start":5,"column_end":71}},{"value":"/ data block before processing it.","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":3410,"byte_end":3446,"line_start":98,"line_end":98,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":3451,"byte_end":3460,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":4902,"byte_end":4915,"line_start":147,"line_end":147,"column_start":12,"column_end":25},"name":"len64_padding","qualname":"<BlockBuffer<BlockSize>>::len64_padding","value":"pub fn len64_padding<B, F>(&mut Self, u64, F) where B: ByteOrder,\nF: FnMut(&GenericArray<u8, BlockSize>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pad message with 0x80, zeros and 64-bit message length\n in a byte order specified by `B`\n","sig":null,"attributes":[{"value":"/ Pad message with 0x80, zeros and 64-bit message length","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":4777,"byte_end":4835,"line_start":144,"line_end":144,"column_start":5,"column_end":63}},{"value":"/ in a byte order specified by `B`","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":4840,"byte_end":4876,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":4881,"byte_end":4890,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":5394,"byte_end":5411,"line_start":162,"line_end":162,"column_start":12,"column_end":29},"name":"len128_padding_be","qualname":"<BlockBuffer<BlockSize>>::len128_padding_be","value":"pub fn len128_padding_be<F>(&mut Self, u64, u64, F) where\nF: FnMut(&GenericArray<u8, BlockSize>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pad message with 0x80, zeros and 128-bit message length\n in the big-endian byte order\n","sig":null,"attributes":[{"value":"/ Pad message with 0x80, zeros and 128-bit message length","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":5272,"byte_end":5331,"line_start":159,"line_end":159,"column_start":5,"column_end":64}},{"value":"/ in the big-endian byte order","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":5336,"byte_end":5368,"line_start":160,"line_end":160,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":5373,"byte_end":5382,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":6012,"byte_end":6020,"line_start":179,"line_end":179,"column_start":12,"column_end":20},"name":"pad_with","qualname":"<BlockBuffer<BlockSize>>::pad_with","value":"pub fn pad_with<P: Padding>(&mut Self)\n-> Result<&mut GenericArray<u8, BlockSize>, PadError>","parent":null,"children":[],"decl_id":null,"docs":" Pad message with a given padding `P`","sig":null,"attributes":[{"value":"/ Pad message with a given padding `P`","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":5826,"byte_end":5866,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":5871,"byte_end":5874,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Returns `PadError` if internall buffer is full, which can only happen if","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":5879,"byte_end":5955,"line_start":176,"line_end":176,"column_start":5,"column_end":81}},{"value":"/ `input_lazy` was used.","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":5960,"byte_end":5986,"line_start":177,"line_end":177,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":5991,"byte_end":6000,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":6303,"byte_end":6307,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"size","qualname":"<BlockBuffer<BlockSize>>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return size of the internall buffer in bytes\n","sig":null,"attributes":[{"value":"/ Return size of the internall buffer in bytes","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":6229,"byte_end":6277,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":6282,"byte_end":6291,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":6427,"byte_end":6435,"line_start":195,"line_end":195,"column_start":12,"column_end":20},"name":"position","qualname":"<BlockBuffer<BlockSize>>::position","value":"pub fn position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return current cursor position\n","sig":null,"attributes":[{"value":"/ Return current cursor position","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":6367,"byte_end":6401,"line_start":193,"line_end":193,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":6406,"byte_end":6415,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":6568,"byte_end":6577,"line_start":201,"line_end":201,"column_start":12,"column_end":21},"name":"remaining","qualname":"<BlockBuffer<BlockSize>>::remaining","value":"pub fn remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return number of remaining bytes in the internall buffer\n","sig":null,"attributes":[{"value":"/ Return number of remaining bytes in the internall buffer","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":6482,"byte_end":6542,"line_start":199,"line_end":199,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":6547,"byte_end":6556,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":6715,"byte_end":6720,"line_start":207,"line_end":207,"column_start":12,"column_end":17},"name":"reset","qualname":"<BlockBuffer<BlockSize>>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset buffer by setting cursor position to zero\n","sig":null,"attributes":[{"value":"/ Reset buffer by setting cursor position to zero","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":6638,"byte_end":6689,"line_start":205,"line_end":205,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":6694,"byte_end":6703,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":703,"byte_end":714,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/nolanjacobson/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":703,"byte_end":714,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}}]}